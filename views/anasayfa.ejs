<!DOCTYPE html>
<html lang="en">

<head>
    <script src="/public/js/ansayfa.js"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Anasayfa</title>
    <link rel="stylesheet" href="/public/css/Anasayfa.css">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <!-- Boxicons kütüphanesi -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Chart.js kütüphanesi -->
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@1.0.0"></script>
    <!-- Zoom Plugin -->
</head>

<body>
    <nav>
        <ul class="left-menu">
            <li><a href="#" id="homeLink">HOME</a></li>
        </ul>
        <div class="center-toggle">
            <button id="toggleMode">CHANGE MODE</button>
        </div>
        <div class="right-menu">
            <a href="#" class="user-icon" onclick="toggleDropdown()">
                <i class='bx bx-user'></i>
            </a>
            <% if (username) { %>
                <span class="username-text">
                    <%= username %>
                </span>
                <% } %>
                    <div class="dropdown-content" id="dropdownContent">
                        <a href="#" onclick="openSettingsModal()">Settings</a>
                        <a href="#" onclick="openMyAccountModal()">My Account</a>
                        <a href="#" id="logoutLink">Log Out</a>
                    </div>
        </div>
    </nav>

    <!-- Üstte sabit kalacak başlıklar -->
    <div class="sticky-header">
        <ul class="sticky-menu">
            <li><a href="#">Position:</a></li>
            <li><a href="#">Overview:</a></li>
            <li><a href="#">Leverage:</a></li>
        </ul>
    </div>

    <!-- Bilgi kutucuğu -->
    <div id="infoBox" class="info-box" style="display:none;"></div>

    <!-- Settings Modal -->
    <div id="settingsModal" class="modal">
        <div class="modal-content">
            <h2>Settings</h2>
            <form>
                <label for="username">Username:</label>
                <input type="text" id="username" name="username">
                <br>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email">
                <br>
                <button type="submit">Save</button>
            </form>
            <span class="close" onclick="closeSettingsModal()">&times;</span>
        </div>
    </div>

    <!-- My Account Modal -->
    <div id="myAccountModal" class="modal">
        <div class="modal-content">
            <h2>MY ACCOUNT</h2>
            <canvas id="myAccountChart"></canvas>
            <span class="close" onclick="closeMyAccountModal()">&times;</span>
        </div>
    </div>

    <!-- Dinamik fiyat kaydırma kutusu -->
    <div class="price-ticker">
        <div class="ticker-content" id="tickerContent">
            <!-- Dinamik olarak fiyatlar buraya eklenecek -->
        </div>
    </div>

    <!-- BİRLEŞİK TABLO -->
    <div id="mergedTable" class="merged-table">
        <table>
            <thead>
                <tr>
                    <th>Asset</th>
                    <th>Price</th>
                    <th>Spot Quantity</th>
                    <th>Spot Amount</th>
                    <th>Future Quantity</th>
                    <th>Future Amount</th>
                    <th>Total Position</th>
                </tr>
            </thead>
            <tbody>
                <!-- CRYPTO HEADER -->
                <tr class="category-header">
                    <td colspan="7">Crypto</td>
                </tr>
                <!-- CRYPTO -->



                <!-- STOCK HEADER -->
                <tr class="category-header">
                    <td colspan="7">Stock</td>
                    <% stockData.forEach(function(stock) { %>

                        <td>
                            <%= stock.instrument %>
                        </td>
                        <td>
                            <%= stock.price %>
                        </td>
                        <td>
                            <%= stock.spotQuantity %>
                        </td>
                        <td>
                            <%= stock.spotAmount %>
                        </td>
                        <td>-</td>
                        <td>-</td>
                        <td></td>

                        <% }); %>
                </tr>
                <!-- STOCK -->


                <!-- COMMODITY HEADER -->
                <tr class="category-header">

                    <td colspan="7">Commodity</td>
                    <td>XAG</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <!-- COMMODITY -->

                <tr>
                    <td>XAU</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>

                <!-- CASH & EQUIVALENTS HEADER -->
                <tr class="category-header">
                    <td colspan="7">Cash & Equivalents</td>
                    <% spot.cashBalances.forEach((cash)=> { %>

                        <td>
                            <%= cash.symbol %>
                        </td>
                        <td id="price-<%= cash.symbol %>"></td>
                        <td>
                            <%= cash.available %>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>

                        <% }); %>
                </tr>

                <!-- Yeni USD Satırı Eklendi -->
                <tr>
                    <td>USD</td>
                    <td id="price-USD"></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>

    <script>
        function toggleDropdown() {
            var dropdown = document.getElementById("dropdownContent");
            dropdown.style.display = dropdown.style.display === "block" ? "none" : "block";
        }

        function openSettingsModal() {
            document.getElementById("settingsModal").style.display = "flex";
        }

        function closeSettingsModal() {
            document.getElementById("settingsModal").style.display = "none";
        }

        function openMyAccountModal() {
            document.getElementById("myAccountModal").style.display = "flex";
        }

        function closeMyAccountModal() {
            document.getElementById("myAccountModal").style.display = "none";
        }
        // Tema değiştirici
        document.getElementById('toggleMode').addEventListener('click', function() {
            document.body.classList.toggle('light-mode');
            let theme = document.body.classList.contains('light-mode') ? 'light' : 'dark';
            localStorage.setItem('theme', theme);
        });

        window.onload = function() {
            if (localStorage.getItem('theme') === 'light') {
                document.body.classList.add('light-mode');
            }
        };


        document.addEventListener("DOMContentLoaded", () => {
            const ws = new WebSocket('ws://localhost:8080'); // WebSocket sunucusuna bağlan

            ws.onmessage = function(event) {
                const {
                    futures,
                    spot
                } = JSON.parse(event.data);
                const tableBody = document.querySelector('#mergedTable tbody');

                // Eğer tablo gövdesi mevcutsa
                if (tableBody) {
                    // Eski satırları temizle
                    tableBody.innerHTML = '';

                    // Crypto Header
                    const cryptoHeader = document.createElement('tr');
                    cryptoHeader.classList.add('category-header');
                    cryptoHeader.innerHTML = '<td colspan="7">Crypto</td>';
                    tableBody.appendChild(cryptoHeader);

                    // Spot verilerini ekle
                    spot.availableBalances.forEach((asset) => {
                        if (asset.symbol !== 'USDT') {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                            <td>${asset.symbol}</td>
                            <td></td>
                            <td>${asset.available}</td>
                            <td></td>
                            <td>-</td>
                            <td>-</td>
                            <td></td>
                        `;
                            tableBody.appendChild(row);
                        }
                    });

                    // Futures verilerini ekle
                    futures.forEach((future) => {
                        const row = document.createElement('tr');
                        row.setAttribute('data-symbol', future.symbol);
                        row.innerHTML = `
                        <td>${future.symbol}</td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>${future.quantity}</td>
                        <td>${future.amount}</td>
                        <td></td>
                    `;
                        tableBody.appendChild(row);
                    });
                } else {
                    console.warn('Merged table body not found!');
                }
            };

            ws.onclose = function() {
                console.log('WebSocket bağlantısı kapatıldı');
                // Tabloyu temizlemek isteyebilirsin
                const tableBody = document.querySelector('#mergedTable tbody');
                if (tableBody) {
                    tableBody.innerHTML = ''; // Eski satırları temizle
                }
            };
        });
    </script>
</body>

</html>