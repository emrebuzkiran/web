<!DOCTYPE html>
<html lang="en">

<head>
    <script src="/public/js/ansayfa.js"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Anasayfa</title>
    <link rel="stylesheet" href="/public/css/Anasayfa.css">
    <link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
    <!-- Boxicons kütüphanesi -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Chart.js kütüphanesi -->
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@1.0.0"></script>
    <!-- Zoom Plugin -->
</head>

<body>
    <nav>
        <ul class="left-menu">
            <li><a href="#" id="homeLink">HOME</a></li>
        </ul>
        <div class="center-toggle">
            <button id="toggleMode">CHANGE MODE</button>
        </div>
        <div class="right-menu">
            <a href="#" class="user-icon" onclick="toggleDropdown()">
                <i class='bx bx-user'></i>
            </a>
            <% if (username) { %>
                <span class="username-text">
                    <%= username %>
                </span>
            <% } %>
            <div class="dropdown-content" id="dropdownContent">
                <a href="#" onclick="openSettingsModal()">Settings</a>
                <a href="#" onclick="openMyAccountModal()">My Account</a>
                <a href="#" id="logoutLink">Log Out</a>
            </div>
        </div>
    </nav>

    <!-- Üstte sabit kalacak başlıklar -->
    <div class="sticky-header">
        <ul class="sticky-menu">
            <li><a href="#">Position:</a></li>
            <li><a href="#">Overview:</a></li>
            <li><a href="#">Leverage:</a></li>
        </ul>
    </div>

    <!-- Bilgi kutucuğu -->
    <div id="infoBox" class="info-box" style="display:none;"></div>

    <!-- Settings Modal -->
    <div id="settingsModal" class="modal">
        <div class="modal-content">
            <h2>Settings</h2>
            <form>
                <label for="username">Username:</label>
                <input type="text" id="username" name="username">
                <br>
                <label for="email">Email:</label>
                <input type="email" id="email" name="email">
                <br>
                <button type="submit">Save</button>
            </form>
            <span class="close" onclick="closeSettingsModal()">&times;</span>
        </div>
    </div>

    <!-- My Account Modal -->
    <div id="myAccountModal" class="modal">
        <div class="modal-content">
            <h2>MY ACCOUNT</h2>
            <canvas id="myAccountChart"></canvas>
            <span class="close" onclick="closeMyAccountModal()">&times;</span>
        </div>
    </div>

    <!-- Dinamik fiyat kaydırma kutusu -->
    <div class="price-ticker">
        <div class="ticker-content" id="tickerContent">
            <!-- Dinamik olarak fiyatlar buraya eklenecek -->
        </div>
    </div>

    <!-- BİRLEŞİK TABLO -->
    <div id="mergedTable" class="merged-table">
        <table>
            <thead>
                <tr>
                    <th>Asset</th>
                    <th>Price</th>
                    <th>Spot Quantity</th>
                    <th>Spot Amount</th>
                    <th>Future Quantity</th>
                    <th>Future Amount</th>
                    <th>Total Position</th>
                </tr>
            </thead>
            <tbody>
                <!-- CRYPTO HEADER -->
                <tr class="category-header">
                    <td colspan="7">Crypto</td>
                </tr>
                <!-- CRYPTO -->

                <% spot.availableBalances.forEach((asset)=> { %>
                    <% if (asset.symbol !== 'USDT') { %>
                        <tr>
                            <td>
                                <%= asset.symbol %>
                            </td>
                            <td id="price-<%= asset.symbol %>"></td>
                            <td>
                                <%= asset.available %>
                            </td>
                            <td>
                                <%= asset.onOrder %>
                            </td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    <% } %>
                <% }); %>
                <% futures.forEach((future)=> { %>
                    <tr>
                        <td>
                            <%= future.symbol %>
                        </td>
                        <td id="price-<%= future.symbol %>"></td>
                        <td></td>
                        <td></td>
                                                <td>
                            <%= future.quantity %>
                        </td>
                        <td>
                            <%= future.amount %>
                        </td>

                        <td></td>
                    </tr>
                <% }); %>

                <!-- STOCK HEADER -->
                <tr class="category-header">
                    <td colspan="7">Stock</td>
                </tr>
                <!-- STOCK -->
                <tr>
                    <td>PLNTR</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>META</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>TSLA</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>

                <!-- COMMODITY HEADER -->
                <tr class="category-header">
                    <td colspan="7">Commodity</td>
                </tr>
                <!-- COMMODITY -->
                <tr>
                    <td>XAG</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>XAU</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>

                <!-- CASH & EQUIVALENTS HEADER -->
                <tr class="category-header">
                    <td colspan="7">Cash & Equivalents</td>
                </tr>
                <% spot.cashBalances.forEach((cash)=> { %>
                    <tr>
                        <td>
                            <%= cash.symbol %>
                        </td>
                        <td id="price-<%= cash.symbol %>"></td>
                        <td>
                            <%= cash.available %>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                <% }); %>
                <!-- Yeni USD Satırı Eklendi -->
                <tr>
                    <td>USD</td>
                    <td id="price-USD"></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>

    <script>
        function toggleDropdown() {
            var dropdown = document.getElementById("dropdownContent");
            dropdown.style.display = dropdown.style.display === "block" ? "none" : "block";
        }

        function openSettingsModal() {
            document.getElementById("settingsModal").style.display = "flex";
        }

        function closeSettingsModal() {
            document.getElementById("settingsModal").style.display = "none";
        }

        function openMyAccountModal() {
            document.getElementById("myAccountModal").style.display = "flex";
        }

        function closeMyAccountModal() {
            document.getElementById("myAccountModal").style.display = "none";
        }

        // Tema değiştirici
        document.getElementById('toggleMode').addEventListener('click', function() {
            document.body.classList.toggle('light-mode');
            let theme = document.body.classList.contains('light-mode') ? 'light' : 'dark';
            localStorage.setItem('theme', theme);
        });

        window.onload = function() {
            if (localStorage.getItem('theme') === 'light') {
                document.body.classList.add('light-mode');
            }
        };

        // Binance fiyatlarını güncelleme
        const btcWebSocket = new WebSocket('wss://stream.binance.com:9443/ws/btcusdt@trade');
        const usdtWebSocket = new WebSocket('wss://stream.binance.com:9443/ws/usdtusdt@trade');
        const ldusdtWebSocket = new WebSocket('wss://stream.binance.com:9443/ws/ldusdtusdt@trade');
        const injWebSocket = new WebSocket('wss://stream.binance.com:9443/ws/injusdt@trade');
        const ldsolWebSocket = new WebSocket('wss://stream.binance.com:9443/ws/ldsolusdt@trade');
        const arbWebSocket = new WebSocket('wss://stream.binance.com:9443/ws/arbusdt@trade');
        const aevoWebSocket = new WebSocket('wss://stream.binance.com:9443/ws/aevousdt@trade');

        // Yeni USD WebSocket Eklenebilir (Eğer Destekleniyorsa)
        // const usdWebSocket = new WebSocket('wss://stream.binance.com:9443/ws/usdusdt@trade');

        // BTC fiyatlarını dinlemek
        btcWebSocket.onmessage = function(event) {
            const btcData = JSON.parse(event.data);
            const btcPrice = parseFloat(btcData.p).toFixed(2);
            updatePrice('BTC', btcPrice);
        };

        // USDT fiyatlarını dinlemek
        usdtWebSocket.onmessage = function(event) {
            const usdtData = JSON.parse(event.data);
            const usdtPrice = parseFloat(usdtData.p).toFixed(2);
            updatePrice('USDT', usdtPrice);
        };

        // LDUSDT fiyatlarını dinlemek
        ldusdtWebSocket.onmessage = function(event) {
            const ldusdtData = JSON.parse(event.data);
            const ldusdtPrice = parseFloat(ldusdtData.p).toFixed(2);
            updatePrice('LDUSDT', ldusdtPrice);
        };

        // INJ fiyatlarını dinlemek
        injWebSocket.onmessage = function(event) {
            const injData = JSON.parse(event.data);
            const injPrice = parseFloat(injData.p).toFixed(2);
            updatePrice('INJ', injPrice);
        };

        // LDSOL fiyatlarını dinlemek
        ldsolWebSocket.onmessage = function(event) {
            const ldsolData = JSON.parse(event.data);
            const ldsolPrice = parseFloat(ldsolData.p).toFixed(2);
            updatePrice('LDSOL', ldsolPrice);
        };

        // ARB fiyatlarını dinlemek
        arbWebSocket.onmessage = function(event) {
            const arbData = JSON.parse(event.data);
            const arbPrice = parseFloat(arbData.p).toFixed(2);
            updatePrice('ARB', arbPrice);
        };

        // AEVO fiyatlarını dinlemek
        aevoWebSocket.onmessage = function(event) {
            const aevoData = JSON.parse(event.data);
            const aevoPrice = parseFloat(aevoData.p).toFixed(2);
            updatePrice('AEVO', aevoPrice);
        };

        // Fiyatları tabloya güncelleyen fonksiyon
        function updatePrice(symbol, price) {
            const priceElement = document.getElementById('price-' + symbol);
            if (priceElement) {
                priceElement.textContent = `$${price}`;
            }
        }
    </script>
</body>

</html>
